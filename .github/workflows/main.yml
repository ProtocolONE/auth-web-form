name: Build
on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  tests:
    name: tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          persist-credentials: true

      - uses: actions/setup-node@v2
        with:
          node-version: '11'

      - name: npm install
        run: npm install

      - name: tests
        run: |
          npm run lint
          npm run test
        
  deploy-tst:
    env:
      JENKINS_AUTH_TOKEN: ${{ secrets.JENKINS_AUTH_TOKEN }}
      JENKINS_BUILD_TOKEN: ${{ secrets.JENKINS_BUILD_TOKEN }}
      AWS_CDN_ACCESS_KEY_ID: ${{ secrets.AWS_CDN_ACCESS_KEY_ID }}
      AWS_CDN_ACCESS_SECRET_KEY: ${{ secrets.AWS_CDN_ACCESS_SECRET_KEY }}
    needs: tests
    runs-on: ubuntu-latest
    if: (github.ref == 'refs/heads/develop') && github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          persist-credentials: true

      - uses: actions/setup-node@v2
        with:
          node-version: '11'

      - name: npm install
        run: npm install

      - name: install rclone
        run: curl https://rclone.org/install.sh | sudo bash

      - name: Deploy to tst
        run: |
          npm run build
          rclone copy dist :s3://cdn-auth-super-com/authform/dev/ --s3-access-key-id=$AWS_CDN_ACCESS_KEY_ID --s3-secret-access-key=$AWS_CDN_ACCESS_SECRET_KEY --s3-region=eu-west-1

  deploy-stg-releasebranch:
    env:
      JENKINS_AUTH_TOKEN: ${{ secrets.JENKINS_AUTH_TOKEN }}
      JENKINS_BUILD_TOKEN: ${{ secrets.JENKINS_BUILD_TOKEN }}
      AWS_CDN_ACCESS_KEY_ID: ${{ secrets.AWS_CDN_ACCESS_KEY_ID }}
      AWS_CDN_ACCESS_SECRET_KEY: ${{ secrets.AWS_CDN_ACCESS_SECRET_KEY }}
    needs: tests
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/heads/release') && github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          persist-credentials: true

      - uses: actions/setup-node@v2
        with:
          node-version: '11'

      - name: npm install
        run: npm install

      - name: install rclone
        run: curl https://rclone.org/install.sh | sudo bash

      - name: Deploy release branch to stg
        run: |
          npm run build
          rclone copy dist :s3://cdn-auth-super-com/authform/stage/ --s3-access-key-id=$AWS_CDN_ACCESS_KEY_ID --s3-secret-access-key=$AWS_CDN_ACCESS_SECRET_KEY --s3-region=eu-west-1

  deploy-release:
    env:
      JENKINS_AUTH_TOKEN: ${{ secrets.JENKINS_AUTH_TOKEN }}
      JENKINS_BUILD_TOKEN: ${{ secrets.JENKINS_BUILD_TOKEN }}
      AWS_CDN_ACCESS_KEY_ID: ${{ secrets.AWS_CDN_ACCESS_KEY_ID }}
      AWS_CDN_ACCESS_SECRET_KEY: ${{ secrets.AWS_CDN_ACCESS_SECRET_KEY }}
    needs: tests
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') && github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          persist-credentials: true

      - uses: actions/setup-node@v2
        with:
          node-version: '11'

      - name: npm install
        run: npm install

      - name: install rclone
        run: curl https://rclone.org/install.sh | sudo bash

      - name: Deploy release tag to stg
        run: |
          npm run build
          rclone copy dist :s3://cdn-auth-super-com/authform/latest/ --s3-access-key-id=$AWS_CDN_ACCESS_KEY_ID --s3-secret-access-key=$AWS_CDN_ACCESS_SECRET_KEY --s3-region=eu-west-1
          rclone copy dist :s3://cdn-auth-super-com/authform/${GITHUB_REF##*/} --s3-access-key-id=$AWS_CDN_ACCESS_KEY_ID --s3-secret-access-key=$AWS_CDN_ACCESS_SECRET_KEY --s3-region=eu-west-1


  slack-notification:
    needs: [tests, deploy-tst, deploy-stg-releasebranch, deploy-release]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Slack Workflow Notification
        uses: paysuper/slack-workflow-status@118b3b43993d447a1a5cd7fddf5a1235ab219b18
        with:
          repo_token: ${{secrets.GITHUB_TOKEN}}
          slack_webhook_url: ${{secrets.SLACK_WEBHOOK_URL}}

